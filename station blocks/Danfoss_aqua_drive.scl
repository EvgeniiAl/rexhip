FUNCTION_BLOCK "DanfossAquaDrive"
TITLE = Danfoss AQUA-drive FC 202
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      in_mb_addr : USInt;
      in_ref : Real;   // 0-100 %
      in_stop : Struct
         cost : Bool;
         ramp : Bool;
         quick : Bool;
      END_STRUCT;
   END_VAR

   VAR_OUTPUT 
      out_rpm : Real;
      out_hz : Real;
      out_current : Real;
      out_stat : Struct
         running : Bool;
         ready : Bool;
         error : Bool;
      END_STRUCT;
   END_VAR

   VAR_IN_OUT 
      mb_query : "mb_query";
   END_VAR

   VAR
      sb : "mb_station_block_udt";   
      serial_number : String[20];
      ctw : Struct
         b8 : Bool;
         b9 : Bool;
         b10_data_valid : Bool := true;
         b11 : Bool;
         b12 : Bool;
         b13 : Bool;
         b14 : Bool;
         b15_reverse : Bool;
         b0 : Bool;
         b1 : Bool;
         b2_inv_stop_ramp : Bool := true;
         b3_inv_stop_coasting : Bool := true;
         b4_inv_stop_quick : Bool := true;
         b5_inv_hold_output_frequency : Bool := true;
         b6 : Bool;
         b7_reset : Bool;
      END_STRUCT;
      stw : Struct
         b8_Speed_eq_reference : Bool;
         b9_bus_control : Bool;
         b10_frequency_limit_ok : Bool;
         b11_in_operation : Bool;
         b12_stopped_auto_start : Bool;
         b13_voltage_exceeded : Bool;
         b14_torque_exceeded : Bool;
         b15_timer_exceeded : Bool;
         b0_control_ready : Bool;
         b1_drive_ready : Bool;
         b2_enable : Bool;   // 0=Coasting
         b3_trip : Bool;
         b4_error_no_trip : Bool;
         b5 : Bool;
         b6_triplock : Bool;
         b7_warning : Bool;
      END_STRUCT;
      basic : Struct
         rpm : DInt;
         hz : DInt;
         current : DInt;
      END_STRUCT;
   END_VAR

   VAR_TEMP 
      "int" : Int;
      "real" : Real;
   END_VAR


BEGIN
	// Web: http://files.danfoss.com/documents/PE/doc_MG20N202.pdf
	//      http://files.danfoss.com/documents/PE/doc_MG20O602.pdf
	// Warning: The code has not been tested with real equipment !
	
	"mb_station_block_header"(sb := #sb, mb_query := #mb_query);
	#mb_query.mb_addr := #in_mb_addr;
	REGION Read 
	    #mb_query.mode := #mb_query.c.read.holding_reg;
	    // Serial number // 15*1000+51*10-1
	    #mb_query(data_addr := 15509, data_ptr := #serial_number); 
	    // Status word // 16*1000+3*10-1
	    #mb_query(data_addr := 16029, data_ptr := #stw); 
	    #out_stat.ready := #stw.b1_drive_ready AND #stw.b0_control_ready;
	    #out_stat.running := #stw.b11_in_operation;
	    #out_stat.error := #stw.b4_error_no_trip AND #stw.b3_trip;
	    // Hz // 16*1000+13*10-1
	    #mb_query(data_addr := 16129, data_ptr := #basic.hz); 
	    #out_hz := DINT_TO_REAL(#basic.hz) * 0.1;
	    // Electrical current // 16*1000+14*10-1
	    #mb_query(data_addr := 16139, data_ptr := #basic.current); 
	    #out_current := DINT_TO_REAL(#basic.current) * 0.01;
	    // RPM // 16*1000+17*10-1
	    #mb_query(data_addr := 16169, data_ptr := #basic.rpm);
	    #out_rpm := DINT_TO_REAL(#basic.rpm) / 60;
	END_REGION 
	REGION Write 
	    #mb_query.mode := #mb_query.c.write.holding_reg;
	    // Action if no communication. // 8*1000+4*10-1
	    #int := 2; // (2=stop)
	    #mb_query(data_addr := 8039, data_ptr := #int); 
	    // Select fieldbus as the input source, // 8*1000+1*10-1
	    #int := 2; // (2=CTW) 
	    #mb_query(data_addr := 8009, data_ptr := #int); 
	    // CTW (controll word) // 2810 - 1 = 2809
	    #ctw.b3_inv_stop_coasting := NOT #in_stop.cost;
	    #ctw.b2_inv_stop_ramp := NOT #in_stop.ramp;
	    #ctw.b4_inv_stop_quick := NOT #in_stop.quick;
	    #mb_query(data_addr := 2809, data_ptr := #ctw); 
	    // Preset reference // p.144 // 3*1000+10*10-1
	    #real := NORM_X_REAL(MIN := 0, VALUE := #in_ref, MAX := 100);
	    #int := SCALE_X(MIN := 0, VALUE := #real, MAX := 16#4000);
	    #mb_query(data_addr := 3099, data_ptr := #int); 
	END_REGION
	"mb_station_block_footer"(sb := #sb, mb_query := #mb_query);
	
END_FUNCTION_BLOCK

