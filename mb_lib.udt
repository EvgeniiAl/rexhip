TYPE "udt_mb"
VERSION : 0.1
   STRUCT
      q : Struct   // query
         unit : USInt := 1;
         "fc" : UInt := 3;   // function code
         d_addr : UDInt;
         d_len : UInt := 1;
         qid : UInt := 1;   // query id
         next : UInt := 1;   // id of next query to be exec.
      END_STRUCT;
      options : Struct
         buffer_handler : Bool := true;   // start mb_buffer_handler inside mb_query
      END_STRUCT;
      run : Struct
         mode : USInt;
         data_addr : UDInt;
         qid_cnt : UInt;   // query id cnt, one cycle each plc-scan.
         insert : Bool := true;   // insert query param
         exec_cnt : UDInt;   // Execute cnt.
         exec_d_addr : UDInt;
      END_STRUCT;
      status : Struct
         done : Bool;
         error : Bool;
         timeout : Bool;
         status : Word;
      END_STRUCT;
      "const" : Struct
         buffer_db : DB_ANY;
         app : Bool;   // false=>rtu, true=>tcp
         queries : UInt;   // Number of queries
      END_STRUCT;
      query_above : Struct
         done : Bool;
         error : Bool;
         insert : Bool;
      END_STRUCT;
   END_STRUCT;

END_TYPE

TYPE "udt_mb_device"
VERSION : 0.1
   STRUCT
      enable : Bool := true;
      qError : Bool;   // outputs
      config : Struct
         max_err : USInt := 3;   // max repeating errors before qErr is set
      END_STRUCT;
      log : Struct
         done_cnt : UDInt;
         done_dtl {OriginalPartName := 'DTL'; LibVersion := '1.0'} : DTL;
         err_cnt : UDInt;
         err_dtl {OriginalPartName := 'DTL'; LibVersion := '1.0'} : DTL;
         err_status : Word;
         err_d_addr : UDInt;
      END_STRUCT;
      intern : Struct
         range_start_qid : UInt;
         range_end_qid : UInt;
         err_cnt : USInt;   // repeating errors
         tmp_exec_cnt : UDInt;
         skip : Bool;
      END_STRUCT;
   END_STRUCT;

END_TYPE

